name: Build Windows Executable

# Workflow to build Windows executable for Dienstplan Splitter
on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Trigger on version tags
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # Specify exact version
        cache: 'pip'  # Enable pip caching

    - name: Clean build directories
      run: |
        Write-Host "Cleaning build directories..."
        if (Test-Path "build") { Remove-Item -Recurse -Force "build" }
        if (Test-Path "dist") { Remove-Item -Recurse -Force "dist" }
        if (Test-Path "*.spec") { Remove-Item -Force "*.spec" }
        Write-Host "Build directories cleaned"

    - name: Install dependencies
      run: |
        Write-Host "Installing dependencies..."
        python -m pip install --upgrade pip
        pip install --no-cache-dir -r requirements.txt
        Write-Host "Dependencies installed successfully"
        
        Write-Host "Python environment info:"
        python --version
        pip list
        Write-Host "Working directory contents:"
        Get-ChildItem

    - name: Create Windows icon
      run: |
        Write-Host "Installing Pillow for icon conversion..."
        pip install --no-cache-dir pillow
        
        Write-Host "Converting PNG to ICO..."
        python -c "
        from PIL import Image
        img = Image.open('icon.png')
        icon_sizes = [(16,16), (32,32), (48,48), (64,64), (128,128), (256,256)]
        img.save('icon.ico', sizes=icon_sizes)
        "
        
        if (!(Test-Path "icon.ico")) {
            Write-Error "Icon conversion failed"
            exit 1
        }
        Write-Host "Icon converted successfully"

    - name: Build executable
      run: |
        Write-Host "Installing PyInstaller..."
        pip install --no-cache-dir pyinstaller
        
        Write-Host "Creating version info..."
        $version_info = @"
        VSVersionInfo(
          ffi=FixedFileInfo(
            filevers=(1, 0, 0, 0),
            prodvers=(1, 0, 0, 0),
            mask=0x3f,
            flags=0x0,
            OS=0x40004,
            fileType=0x1,
            subtype=0x0,
            date=(0, 0)
          ),
          kids=[
            StringFileInfo([
              StringTable(
                u'040904B0',
                [StringStruct(u'CompanyName', u'R2 Brainworks B.V.'),
                StringStruct(u'FileDescription', u'DienstplanSplitter - PDF Schedule Splitter'),
                StringStruct(u'FileVersion', u'1.0.0'),
                StringStruct(u'InternalName', u'DienstplanSplitter'),
                StringStruct(u'LegalCopyright', u'Â© 2024 R2 Brainworks B.V. All rights reserved.'),
                StringStruct(u'OriginalFilename', u'DienstplanSplitter.exe'),
                StringStruct(u'ProductName', u'DienstplanSplitter'),
                StringStruct(u'ProductVersion', u'1.0.0'),
                StringStruct(u'Publisher', u'R2 Brainworks B.V., Amsterdam, Netherlands')])
            ]),
            VarFileInfo([VarStruct(u'Translation', [1033, 1200])])
          ]
        )
"@ | Set-Content -Path "version_info.txt"
        
        Write-Host "Building executable..."
        pyinstaller --clean --onefile --windowed `
          --name "DienstplanSplitter" `
          --icon "icon.ico" `
          --hidden-import "tkinter" `
          --hidden-import "tkinter.ttk" `
          --hidden-import "tkinter.filedialog" `
          --hidden-import "tkinter.messagebox" `
          --add-data "icon.png;." `
          --version-file "version_info.txt" `
          dienstplan_splitter_gui.py
        
        Write-Host "Build completed"
        
        # Verify build output
        if (!(Test-Path "dist/DienstplanSplitter.exe")) {
            Write-Error "Build failed: Executable not found"
            Write-Host "Directory contents:"
            Get-ChildItem -Recurse
            exit 1
        }
        Write-Host "Build verification successful"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: DienstplanSplitter-${{ github.ref_name }}
        path: dist/DienstplanSplitter.exe
        if-no-files-found: error  # Fail if no files to upload 