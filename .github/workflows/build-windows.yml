name: Build Windows Executable

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

# Add permissions block
permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Clean build directories
        shell: pwsh
        run: |
          if (Test-Path "build") { Remove-Item -Recurse -Force "build" }
          if (Test-Path "dist") { Remove-Item -Recurse -Force "dist" }
          if (Test-Path "*.spec") { Remove-Item -Force "*.spec" }

      - name: Install dependencies
        shell: pwsh
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt
          python --version
          pip list
          Get-ChildItem

      - name: Create Windows icon
        shell: pwsh
        run: |
          pip install --no-cache-dir pillow
          python -c "
          from PIL import Image
          img = Image.open('icon.png')
          icon_sizes = [(16,16), (32,32), (48,48), (64,64), (128,128), (256,256)]
          img.save('icon.ico', sizes=icon_sizes)
          "
          if (!(Test-Path "icon.ico")) { throw "Icon conversion failed" }

      - name: Build executable
        shell: pwsh
        run: |
          pip install --no-cache-dir pyinstaller
          $version_info = @'
          VSVersionInfo(
            ffi=FixedFileInfo(
              filevers=(1, 0, 0, 0),
              prodvers=(1, 0, 0, 0),
              mask=0x3f,
              flags=0x0,
              OS=0x40004,
              fileType=0x1,
              subtype=0x0,
              date=(0, 0)
            ),
            kids=[
              StringFileInfo([
                StringTable(
                  u'040904B0',
                  [StringStruct(u'CompanyName', u'R2 Brainworks B.V.'),
                  StringStruct(u'FileDescription', u'DienstplanSplitter - PDF Schedule Splitter'),
                  StringStruct(u'FileVersion', u'1.0.0'),
                  StringStruct(u'InternalName', u'DienstplanSplitter'),
                  StringStruct(u'LegalCopyright', u'Â© 2024 R2 Brainworks B.V. All rights reserved.'),
                  StringStruct(u'OriginalFilename', u'DienstplanSplitter.exe'),
                  StringStruct(u'ProductName', u'DienstplanSplitter'),
                  StringStruct(u'ProductVersion', u'1.0.0'),
                  StringStruct(u'Publisher', u'R2 Brainworks B.V., Amsterdam, Netherlands')])
              ]),
              VarFileInfo([VarStruct(u'Translation', [1033, 1200])])
            ]
          )
          '@ | Set-Content -Path "version_info.txt"
          
          pyinstaller --clean --onefile --windowed `
            --name "DienstplanSplitter" `
            --icon "icon.ico" `
            --hidden-import "tkinter" `
            --hidden-import "tkinter.ttk" `
            --hidden-import "tkinter.filedialog" `
            --hidden-import "tkinter.messagebox" `
            --add-data "icon.png;." `
            --version-file "version_info.txt" `
            dienstplan_splitter_gui.py
          
          if (!(Test-Path "dist/DienstplanSplitter.exe")) { 
            Get-ChildItem -Recurse
            throw "Build failed: Executable not found" 
          }

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: softprops/action-gh-release@v1
        with:
          name: DienstplanSplitter ${{ github.ref_name }}
          body_path: release_notes.md
          files: dist/DienstplanSplitter.exe
          draft: false
          prerelease: false

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: DienstplanSplitter-${{ github.ref_name }}
          path: dist/DienstplanSplitter.exe
          if-no-files-found: error 